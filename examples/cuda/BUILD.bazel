load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_distroless//apt:defs.bzl", "dpkg_status")

# NOTE:
# bazel run //examples/cuda:tarball
# fails with duplicates of file paths not supported
# load("@rules_distroless//distroless:defs.bzl", "flatten")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

PACKAGES = [
    "@cuda//dpkg",
    "@cuda//apt",
    "@cuda//cuda-11-8",
    "@cuda//cudnn9-cuda-11-8",
]

pkg_tar(
    name = "flat/cuda-11-8",
    deps = ["@cuda//cuda-11-8/amd64"],
)

pkg_tar(
    name = "flat/cudnn9-cuda-11-8",
    deps = ["@cuda//cudnn9-cuda-11-8/amd64"],
)

# Creates /var/lib/dpkg/status with installed package information.
dpkg_status(
    name = "dpkg_status",
    controls = [
        "%s/amd64:control" % package
        for package in PACKAGES
    ],
)

oci_image(
    name = "apt",
    architecture = "amd64",
    os = "linux",
    tars = [
       "@cuda//dpkg/amd64",
       "@cuda//apt/amd64",
        ":flat/cudnn9-cuda-11-8",
        ":flat/cuda-11-8",
        ":dpkg_status",
    ],
)

oci_load(
    name = "tarball",
    image = ":apt",
    repo_tags = [
        "distroless/test:latest",
    ],
)

container_structure_test(
    name = "test",
    configs = select({
        "@platforms//cpu:x86_64": ["test_linux_amd64.yaml"],
        "@platforms//cpu:arm64": ["test_linux_arm64.yaml"],
    }),
    image = ":apt",
    target_compatible_with = select({
        "@platforms//cpu:x86_64": ["@platforms//cpu:x86_64"],
        "@platforms//cpu:arm64": ["@platforms//cpu:arm64"],
    }) + [
        "@platforms//os:linux",
    ],
)
